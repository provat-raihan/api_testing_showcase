{
	"info": {
		"_postman_id": "7496cb7e-7852-4d3c-a930-8a12ff721fd4",
		"name": "booksapi data driven",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48155815"
	},
	"item": [
		{
			"name": "submit order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Order created successfully\", function () {",
							"    pm.expect(jsonData).to.have.property(\"created\", true);",
							"    pm.expect(jsonData).to.have.property(\"orderId\");",
							"});",
							"",
							"// Save orderId for chaining",
							"pm.environment.set(\"orderId\", jsonData.orderId);",
							"console.log(\"Created Order ID:\", jsonData.orderId);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": {{BookID}},\n  \"customerName\": \"{{CustomerName}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all orders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"let jsonData = pm.response.json();",
							"pm.test(\"Order has correct fields\", function () {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"bookId\");",
							"    pm.expect(jsonData).to.have.property(\"customerName\");",
							"});",
							"",
							"pm.test(\"OrderId matches created one\", function () {",
							"    pm.expect(jsonData.orderId).to.eql(pm.environment.get(\"id\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/orders/{{orderId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete status is 200 or 204\", function () {",
							"    pm.expect([200, 204]).to.include(pm.response.code);",
							"});",
							"pm.environment.unset(\"orderId\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"customerName\": \"pro\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/orders/{{orderId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "f22207fc1ed2c7f7aee1bf55a5098fe19aa9668ed2315596af0d4dff167aea83",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": ""
		}
	]
}